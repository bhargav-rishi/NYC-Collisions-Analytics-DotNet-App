@{
    ViewData["Title"] = "About";
}

<main class="container">
    <section class="about-letter">
        <h2>A Letter for You</h2>
        <p>Hello Visitor,</p>

        <p>
            When we started this project, we did not just want to build another static website, but to use data to tell a story that matters. That is why we chose to work with NYC motor vehicle collision data. It is real, relevant, and behind every number is a person, a moment, a consequence.
        </p>

        <p>
            How can data help us understand something as serious as traffic safety? How can we present that in a way that is clear, helpful, and insightful? Those questions guided everything from how we structured the site, to how we designed the charts, built the data model, and collaborated on each part of the project.
        </p>

        <p>
            We hope this dashboard reflects the thought, care, and teamwork we poured into it. It is simple, but meaningful to us, and we are proud to share it with you.
        </p>

        <p style="margin-bottom: 0;">Thank you so much for stopping by,</p>
        <p style="margin:0;"><strong>Rishi, Safiya, Chi and Karthik.</strong></p>
    </section>

    <div class="team">
        <h3>Our Team</h3>
        <div class="team-grid">
            <div class="team-member">
                <img src="~/images/Rishi.jpg" alt="Bhargav Rishi Medisetti" />
                <h4>Bhargav Rishi Medisetti</h4>
                <p><strong>Role:</strong> Project Manager</p>
                <div class="contribution-bubble">
                    “I designed and implemented the Home Page and took the lead in organizing the overall structure of the project.”
                </div>
            </div>

            <div class="team-member">
                <img src="~/images/Safiya.jpg" alt="Safiya Joseph" />
                <h4>Safiya Joseph</h4>
                <p><strong>Role:</strong> Data Visualization Specialist</p>
                <div class="contribution-bubble">
                    “I built the Data Visualization page and brought the data to life by implementing interactive charts.”
                </div>
            </div>

            <div class="team-member">
                <img src="~/images/Chi.jpg" alt="Chi Phuong Diep" />
                <h4>Chi Phuong Diep</h4>
                <p><strong>Role:</strong> Developer</p>
                <div class="contribution-bubble">
                    “I built the About Us page, created the team section, and integrated our ERD model into our site.”
                </div>
            </div>

            <div class="team-member">
                <img src="~/images/Karthik.jpg" alt="Sudhamshu Karthik Reddy Nagaiaghari" />
                <h4>Sudhamshu Karthik Reddy Nagaiaghari</h4>
                <p><strong>Role:</strong> Developer</p>
                <div class="contribution-bubble">
                    “I was responsible for creating all the CRUD operation pages and ensured site navigation and data management features worked smoothly.”
                </div>
            </div>
        </div>
    </div>

    <br></br>
    <div class="data-model">
        <h3>Logical Data Model</h3>
        <div class="model-image">
            <img src="~/images/MotorVehicle_ERD.png" alt="ERD diagram" />
        </div>
        <p>We structured our data model to reflect traffic collisions:</p>
        <ul>
            <li><strong>Location</strong> – Contains borough, zip code, and street name where a collision occurred.</li>
            <li><strong>Collision</strong> – Stores date, time, number of persons injured or killed, and a reference to the location (LocationID).</li>
            <li><strong>Vehicle</strong> – Stores vehicle information involved in a collision, and a foreign key to the associated collision (CollisionID).</li>
        </ul>
        <p><strong>Design Rationale:</strong> Data is recorded only when a collision occurs. Each collision is linked to one location and may involve multiple vehicles. Additionally, each vehicle can be involved in multiple collisions over time, establishing a many-to-many relationship between collisions and vehicles.</p>
    </div>

    <div class="learning">
        <h3>API Integration</h3>
        <p>We used the <strong>NYC Open Data API</strong> for motor vehicle collisions to get real traffic data from New York City.</p>
        <p><strong>Endpoint:</strong> <code>https://data.cityofnewyork.us/resource/h9gi-nx95.json</code></p>
        <p>This API gave us useful information such as:</p>
        <ul>
            <li>Collision date and time</li>
            <li>Number of people injured or killed</li>
            <li>Location details like borough and zip code</li>
        </ul>
        <p>We chose this API because it is an open source that fits perfectly with our project’s goal, and is easy to work with thanks to its good documentation and structure.</p>
    </div>

    <div class="learning">
        <h3>Technical Challenges & How We Resolved</h3>
        <ul>
            <li><strong>Cleaning messy data:</strong> The raw API data had missing fields and inconsistent formatting. We handled the data cleaning before using.</li>
            <li><strong>Adjusting the ERD:</strong> We originally had coordinates in the location table, but decided to remove them to keep our data model consistent with the API endpoint we used.</li>
            <li><strong>Handling API rate limits:</strong> During testing, we hit usage limits, but we figured out how to implement pagination using the limit and offset parameters, which allowed us to load multiple pages and access more records efficiently.</li>
            <li><strong>Modeling relationships:</strong> It took time to figure out how to best connect locations, collisions, and vehicles. We finally used foreign keys and a clear ERD structure to tie everything together.</li>
        </ul>
    </div>

    <div class="learning">
        <h3>We Continue Learning</h3>
        <ul>
            <li>How to structure a static website using HTML, CSS, and JavaScript.</li>
            <li>How to use Chart.js to create simple, clear data visualizations.</li>
            <li>The value of keeping files and folders well organized.</li>
            <li>How to design an ERD and understand how entities relate.</li>
            <li>How to collaborate as a team and merge different parts into one project.</li>
            <li>How to debug layout and file path issues through testing.</li>
            <li>Why writing clean, reusable code helps with future updates.</li>
        </ul>
    </div>

    <div class="repository">
        <h3>GitHub Repository</h3>
        <a href="https://github.com/mbrishi/group1_final_group_project.git" class="repo-button" target="_blank">
            View Our Project on GitHub
        </a>
    </div>
</main>
